	CONSTANT switches, 00 ; read switch values at port 0
	CONSTANT LEDs, 01; write 7-seg LED at port 1

	; Define 7-segment LED pattern {dp,g,f,e,d,c,b,a}
	CONSTANT LED_0, 00000001'b; display '0' on 7-segment display
	CONSTANT LED_1, 01001111'b; display '1' on 7-segment display
	CONSTANT LED_2, 00010010'b; display '2' on 7-segment display
	CONSTANT LED_3, 00000110'b; display '3' on 7-segment display
	CONSTANT LED_4, 01001100'b; display '4' on 7-segment display
	CONSTANT LED_5, 00100100'b; display '5' on 7-segment display
	CONSTANT LED_6, 00100000'b; display '6' on 7-segment display
	CONSTANT LED_7, 00001111'b; display '7' on 7-segment display
	CONSTANT LED_8, 00000000'b; display '8' on 7-segment display
	CONSTANT LED_9, 00001100'b; display '9' on 7-segment display
	CONSTANT LED_A, 00001000'b; display 'A' on 7-segment display
	CONSTANT LED_B, 01100000'b; display 'B' on 7-segment display
	CONSTANT LED_C, 00110001'b; display 'C' on 7-segment display
	CONSTANT LED_D, 01000010'b; display 'D' on 7-segment display
	CONSTANT LED_E, 00110000'b; display 'E' on 7-segment display
	CONSTANT LED_F, 00111000'b; display 'F' on 7-segment display

	NAMEREG s0, switch_value; read switches into register s0
	NAMEREG s1, LED_output; load LED output data in register s1

	; Load 7-segment LED patterns into scratchpad RAM
	LOAD 	LED_output, LED_0; grab LED pattern for switches = 0000
	STORE 	LED_output, 00; store in RAM[0]
	LOAD 	LED_output, LED_1; grab LED pattern for switches = 0001
	STORE 	LED_output, 01; store in RAM[1]
	LOAD 	LED_output, LED_2; grab LED pattern for switches = 0010
	STORE 	LED_output, 02; store in RAM[2]
	LOAD 	LED_output, LED_3; grab LED pattern for switches = 0011
	STORE 	LED_output, 03; store in RAM[3]
	LOAD 	LED_output, LED_4; grab LED pattern for switches = 0100
	STORE 	LED_output, 04; store in RAM[4]
	LOAD 	LED_output, LED_5; grab LED pattern for switches = 0101
	STORE 	LED_output, 05; store in RAM[5]
	LOAD 	LED_output, LED_6; grab LED pattern for switches = 0110
	STORE 	LED_output, 06; store in RAM[6]
	LOAD 	LED_output, LED_7; grab LED pattern for switches = 0111
	STORE 	LED_output, 07; store in RAM[7]
	LOAD 	LED_output, LED_8; grab LED pattern for switches = 1000
	STORE 	LED_output, 08; store in RAM[8]
	LOAD 	LED_output, LED_9; grab LED pattern for switches = 1001
	STORE 	LED_output, 09; store in RAM[9]
	LOAD 	LED_output, LED_A; grab LED pattern for switches = 1010
	STORE 	LED_output, 0A; store in RAM[A]
	LOAD 	LED_output, LED_B; grab LED pattern for switches = 1011
	STORE 	LED_output, 0B; store in RAM[B]
	LOAD 	LED_output, LED_C; grab LED pattern for switches = 1100
	STORE 	LED_output, 0C; store in RAM[C]
	LOAD 	LED_output, LED_D; grab LED pattern for switches = 1101
	STORE 	LED_output, 0D; store in RAM[D]
	LOAD 	LED_output, LED_E; grab LED pattern for switches = 1110
	STORE 	LED_output, 0E; store in RAM[E]
	LOAD 	LED_output, LED_F; grab LED pattern for switches = 1111
	STORE 	LED_output, 0F; store in RAM[F]
	
	; Read switch values and display value on 7-segment LED
loop:	INPUT 	switch_value, switches; read value on switches
	AND 	switch_value, 0F; mask upper bits to guarantee < 15
	FETCH 	LED_output, (switch_value); look up LED pattern in RAM
	OUTPUT 	LED_output, LEDs; display switch value on 7-segment LED
	JUMP loop
